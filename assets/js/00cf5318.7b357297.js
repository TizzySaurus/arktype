"use strict";(self.webpackChunkarktype_io=self.webpackChunkarktype_io||[]).push([[2216,174],{9613:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(9496);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9826:(e,n,r)=>{r.d(n,{Z:()=>M});var t=r(574),o=r(1163),a=r(9496),i=r(5924),s=r(4454),c=r(6994),l=r(446),p=r(4660),d=r(1941),u=r(3345),m=r(8658),f=r(1481),b=r(9989);function y(e){return(0,b.Z)("MuiLinearProgress",e)}(0,f.Z)("MuiLinearProgress",["root","colorPrimary","colorSecondary","determinate","indeterminate","buffer","query","dashed","dashedColorPrimary","dashedColorSecondary","bar","barColorPrimary","barColorSecondary","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer"]);var g=r(4637);const v=["className","color","value","valueBuffer","variant"];let h,k,x,w,Z,P,S=e=>e;const O=(0,c.F4)(h||(h=S`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)),C=(0,c.F4)(k||(k=S`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)),j=(0,c.F4)(x||(x=S`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)),D=(e,n)=>"inherit"===n?"currentColor":e.vars?e.vars.palette.LinearProgress[`${n}Bg`]:"light"===e.palette.mode?(0,l.$n)(e.palette[n].main,.62):(0,l._j)(e.palette[n].main,.5),$=(0,u.ZP)("span",{name:"MuiLinearProgress",slot:"Root",overridesResolver:(e,n)=>{const{ownerState:r}=e;return[n.root,n[`color${(0,p.Z)(r.color)}`],n[r.variant]]}})((({ownerState:e,theme:n})=>(0,o.Z)({position:"relative",overflow:"hidden",display:"block",height:4,zIndex:0,"@media print":{colorAdjust:"exact"},backgroundColor:D(n,e.color)},"inherit"===e.color&&"buffer"!==e.variant&&{backgroundColor:"none","&::before":{content:'""',position:"absolute",left:0,top:0,right:0,bottom:0,backgroundColor:"currentColor",opacity:.3}},"buffer"===e.variant&&{backgroundColor:"transparent"},"query"===e.variant&&{transform:"rotate(180deg)"}))),E=(0,u.ZP)("span",{name:"MuiLinearProgress",slot:"Dashed",overridesResolver:(e,n)=>{const{ownerState:r}=e;return[n.dashed,n[`dashedColor${(0,p.Z)(r.color)}`]]}})((({ownerState:e,theme:n})=>{const r=D(n,e.color);return(0,o.Z)({position:"absolute",marginTop:0,height:"100%",width:"100%"},"inherit"===e.color&&{opacity:.3},{backgroundImage:`radial-gradient(${r} 0%, ${r} 16%, transparent 42%)`,backgroundSize:"10px 10px",backgroundPosition:"0 -23px"})}),(0,c.iv)(w||(w=S`
    animation: ${0} 3s infinite linear;
  `),j)),T=(0,u.ZP)("span",{name:"MuiLinearProgress",slot:"Bar1",overridesResolver:(e,n)=>{const{ownerState:r}=e;return[n.bar,n[`barColor${(0,p.Z)(r.color)}`],("indeterminate"===r.variant||"query"===r.variant)&&n.bar1Indeterminate,"determinate"===r.variant&&n.bar1Determinate,"buffer"===r.variant&&n.bar1Buffer]}})((({ownerState:e,theme:n})=>(0,o.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left",backgroundColor:"inherit"===e.color?"currentColor":(n.vars||n).palette[e.color].main},"determinate"===e.variant&&{transition:"transform .4s linear"},"buffer"===e.variant&&{zIndex:1,transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,c.iv)(Z||(Z=S`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `),O))),I=(0,u.ZP)("span",{name:"MuiLinearProgress",slot:"Bar2",overridesResolver:(e,n)=>{const{ownerState:r}=e;return[n.bar,n[`barColor${(0,p.Z)(r.color)}`],("indeterminate"===r.variant||"query"===r.variant)&&n.bar2Indeterminate,"buffer"===r.variant&&n.bar2Buffer]}})((({ownerState:e,theme:n})=>(0,o.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left"},"buffer"!==e.variant&&{backgroundColor:"inherit"===e.color?"currentColor":(n.vars||n).palette[e.color].main},"inherit"===e.color&&{opacity:.3},"buffer"===e.variant&&{backgroundColor:D(n,e.color),transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,c.iv)(P||(P=S`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `),C))),M=a.forwardRef((function(e,n){const r=(0,m.Z)({props:e,name:"MuiLinearProgress"}),{className:a,color:c="primary",value:l,valueBuffer:u,variant:f="indeterminate"}=r,b=(0,t.Z)(r,v),h=(0,o.Z)({},r,{color:c,variant:f}),k=(e=>{const{classes:n,variant:r,color:t}=e,o={root:["root",`color${(0,p.Z)(t)}`,r],dashed:["dashed",`dashedColor${(0,p.Z)(t)}`],bar1:["bar",`barColor${(0,p.Z)(t)}`,("indeterminate"===r||"query"===r)&&"bar1Indeterminate","determinate"===r&&"bar1Determinate","buffer"===r&&"bar1Buffer"],bar2:["bar","buffer"!==r&&`barColor${(0,p.Z)(t)}`,"buffer"===r&&`color${(0,p.Z)(t)}`,("indeterminate"===r||"query"===r)&&"bar2Indeterminate","buffer"===r&&"bar2Buffer"]};return(0,s.Z)(o,y,n)})(h),x=(0,d.Z)(),w={},Z={bar1:{},bar2:{}};if("determinate"===f||"buffer"===f)if(void 0!==l){w["aria-valuenow"]=Math.round(l),w["aria-valuemin"]=0,w["aria-valuemax"]=100;let e=l-100;"rtl"===x.direction&&(e=-e),Z.bar1.transform=`translateX(${e}%)`}else 0;if("buffer"===f)if(void 0!==u){let e=(u||0)-100;"rtl"===x.direction&&(e=-e),Z.bar2.transform=`translateX(${e}%)`}else 0;return(0,g.jsxs)($,(0,o.Z)({className:(0,i.Z)(k.root,a),ownerState:h,role:"progressbar"},w,{ref:n},b,{children:["buffer"===f?(0,g.jsx)(E,{className:k.dashed,ownerState:h}):null,(0,g.jsx)(T,{className:k.bar1,ownerState:h,style:Z.bar1}),"determinate"===f?null:(0,g.jsx)(I,{className:k.bar2,ownerState:h,style:Z.bar2})]}))}))},4744:(e,n,r)=>{r.d(n,{Z:()=>y});var t=r(574),o=r(1163),a=r(9496),i=r(1003),s=r(3746),c=r(5809),l=r(6482),p=r(3345),d=r(8658),u=r(4637);const m=["component","direction","spacing","divider","children"];function f(e,n){const r=a.Children.toArray(e).filter(Boolean);return r.reduce(((e,t,o)=>(e.push(t),o<r.length-1&&e.push(a.cloneElement(n,{key:`separator-${o}`})),e)),[])}const b=(0,p.ZP)("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,n)=>[n.root]})((({ownerState:e,theme:n})=>{let r=(0,o.Z)({display:"flex",flexDirection:"column"},(0,i.k9)({theme:n},(0,i.P$)({values:e.direction,breakpoints:n.breakpoints.values}),(e=>({flexDirection:e}))));if(e.spacing){const t=(0,s.hB)(n),o=Object.keys(n.breakpoints.values).reduce(((n,r)=>(("object"==typeof e.spacing&&null!=e.spacing[r]||"object"==typeof e.direction&&null!=e.direction[r])&&(n[r]=!0),n)),{}),a=(0,i.P$)({values:e.direction,base:o}),c=(0,i.P$)({values:e.spacing,base:o});"object"==typeof a&&Object.keys(a).forEach(((e,n,r)=>{if(!a[e]){const t=n>0?a[r[n-1]]:"column";a[e]=t}}));const p=(n,r)=>{return{"& > :not(style) + :not(style)":{margin:0,[`margin${o=r?a[r]:e.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[o]}`]:(0,s.NA)(t,n)}};var o};r=(0,l.Z)(r,(0,i.k9)({theme:n},c,p))}return r=(0,i.dt)(n.breakpoints,r),r})),y=a.forwardRef((function(e,n){const r=(0,d.Z)({props:e,name:"MuiStack"}),a=(0,c.Z)(r),{component:i="div",direction:s="column",spacing:l=0,divider:p,children:y}=a,g=(0,t.Z)(a,m),v={direction:s,spacing:l};return(0,u.jsx)(b,(0,o.Z)({as:i,ownerState:v,ref:n},g,{children:p?f(y,p):y}))}))},1941:(e,n,r)=>{r.d(n,{Z:()=>a});r(9496);var t=r(4218),o=r(3247);function a(){return(0,t.Z)(o.Z)}},2555:(e,n,r)=>{r.d(n,{g:()=>b});var t=r(9346),o=r(7374),a=r(4744),i=r(9826),s=r(9496);var c={"index.html":'<head>\n    <link href="http://fonts.cdnfonts.com/css/cascadia-code" rel="stylesheet" />\n</head>\n<div id="demo">\n    <div class="section">\n        <div class="card">\n            <h3>Definition</h3>\n            <pre><code id="definition"></code></pre>\n        </div>\n    </div>\n    <div class="section">\n        <div class="card">\n            <h3>Output</h3>\n            <pre><code id="output"></code></pre>\n        </div>\n    </div>\n</div>\n',"demo.css":'body {\n    font-family: "Cascadia Code", sans-serif;\n    background-color: hsl(220 18% 10%);\n}\n\n#demo {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin: -0.5rem;\n    padding: 0.5rem;\n}\n\n#input {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n}\n\n.section {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    gap: 0.5rem;\n}\n\np {\n    white-space: pre-wrap;\n}\n\npre {\n    white-space: pre-wrap;\n}\n\nh3 {\n    margin: 0px;\n    color: #fffff0;\n}\n\n.key {\n    color: #80cff8;\n}\n.val {\n    color: #f5cf8f;\n}\n\n.card {\n    padding: 1rem;\n    background-color: rgb(18, 18, 18);\n    color: rgb(255, 255, 255);\n    /* transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; */\n    border-radius: 1rem;\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 1px -1px,\n        rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px;\n    background-image: linear-gradient(\n        rgba(255, 255, 255, 0.05),\n        rgba(255, 255, 255, 0.05)\n    );\n    height: 100%;\n}\n',"populateDemo.ts":'import "./demo.css"\nimport type { Problems, Type } from "arktype"\nimport { stringify } from "arktype/internal/utils/serialize.js"\n\ntype PopulateDemoArgs = {\n    type: Type\n    data: unknown\n    problems: Problems\n}\nexport const populateDemo = ({ data, type, problems }: PopulateDemoArgs) => {\n    const defElement = document.querySelector("#definition")!\n    defElement.textContent = stringify(type.definition, 2)\n    defElement.innerHTML = recolor(defElement.innerHTML)\n\n    const resultElement = document.querySelector("#output")!\n    if (problems) {\n        resultElement.textContent = `\u274c problems:\n\n${problems}`\n    } else {\n        resultElement.textContent = `\u2705 data:\n\n${stringify(\n            type(data).data,\n            2\n        )}`\n        resultElement.innerHTML = recolor(resultElement.innerHTML)\n    }\n}\n\nconst recolor = (input: string) => {\n    const lines = input.split("\\n")\n    const fixedInput: string[] = []\n    for (const line of lines) {\n        if (line.includes(":")) {\n            const parts = line.split(":")\n            fixedInput.push(`${buildKey(parts[0])}: ${buildVal(parts[1])}`)\n        } else {\n            fixedInput.push(line)\n        }\n    }\n    return fixedInput.join("\\n")\n}\n\nconst buildKey = (key: string) => {\n    return `<span class=\'key\'>${key}</span>`\n}\nconst buildVal = (val: string) => {\n    const formatted = val.trim()\n    if (formatted[formatted.length - 1] === ",") {\n        return `<span class=\'val\'>${formatted.replace(",", "")}</span>,`\n    } else if (formatted[formatted.length - 1] === "{") {\n        return "{"\n    }\n    return `<span class=\'val\'>${formatted}</span>`\n}\n',"tsconfig.json":JSON.stringify({compilerOptions:{module:"esnext",target:"esnext",strict:!0}},null,4)},l=r(4096);var p=function(e){var n=d[e];return'import {populateDemo} from "./populateDemo"\n(async () => {\n    try {\n        '+n[0]+"\n        populateDemo("+n[1]+')\n    } catch(e) {\n        populateDemo({ \n            type: {\n                definition: ""\n            },\n            data: "",\n            problems: "ParseError: " + e.originalErr.message\n          } as any)\n    }\n})()'},d={type:['const { user, data, problems } = await import("./type")',"{ type: user, data, problems }"],scope:['const { types, data, problems } = await import("./scope")',"{ type: types.package, data, problems }"],demo:['const { pkg, data, problems } = await import("./demo")',"{ type: pkg, data, problems }"]},u={type:'import { type } from "arktype"\n\n// Define a type...\nexport const user = type({\n    name: "string",\n    device: {\n        platform: "\'android\'|\'ios\'",\n        "version?": "number"\n    }\n})\n\n// Infer it...\nexport type User = typeof user.infer\n\n// Validate your data anytime, anywhere, with the same clarity and precision you expect from TypeScript.\nexport const { data, problems } = user({\n    name: "Alan Turing",\n    device: {\n        platform: "enigma"\n    }\n})\n\nif (problems) {\n    // "device/platform must be \'android\' or \'ios\' (was \'enigma\')"\n    console.log(problems.summary)\n}\n',scope:'import { scope } from "arktype"\n\n// Scopes are collections of types that can reference each other.\nexport const types = scope({\n    package: {\n        name: "string",\n        "dependencies?": "package[]",\n        "contributors?": "contributor[]"\n    },\n    contributor: {\n        // Subtypes like \'email\' are inferred like \'string\' but provide additional validation at runtime.\n        email: "email",\n        "packages?": "package[]"\n    }\n}).compile()\n\n// Cyclic types are inferred to arbitrary depth...\nexport type Package = typeof types.package.infer\n\n// And can validate cyclic data.\nconst packageData: Package = {\n    name: "arktype",\n    dependencies: [{ name: "typescript" }],\n    contributors: [{ email: "david@sharktypeio" }]\n}\npackageData.dependencies![0].dependencies = [packageData]\n\nexport const { data, problems } = types.package(packageData)\n',demo:'import { type } from "arktype"\n\n// Define your type...\nexport const pkg = type({\n    name: "string",\n    version: "semver",\n    "contributors?": "1<email[]<=10"\n})\n\n// Infer it...\nexport type Package = typeof pkg.infer\n\n// Get validated data or clear, customizable error messages.\nexport const { data, problems } = pkg({\n    name: "arktype",\n    version: "1.0.0-alpha",\n    contributors: ["david@arktype.io"]\n})\n\n// "contributors must be more than 1 items long (was 1)"\nconsole.log(problems?.summary ?? data)\n'},m="arktype-demo",f=function(){var e=(0,o.Z)((0,t.Z)().mark((function e(n){var r,o;return(0,t.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=n.embedId,e.abrupt("return",l.Z.embedProject(m,{files:Object.assign((r={},r[o+".ts"]=u[o],r["index.ts"]=p(o),r),c),title:o,description:"ArkType "+o+" demo",template:"typescript",dependencies:{arktype:"1.0.4-alpha"},settings:{compile:{clearConsole:!1,trigger:"keystroke"}}},{height:"100%",openFile:o+".ts"}));case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),b=function(e){var n=(0,s.useState)(!0),r=n[0],t=n[1];return(0,s.useEffect)((function(){y(e,t)}),[]),s.createElement(a.Z,{width:"100%",height:"600px"},r?s.createElement(i.Z,null):null,s.createElement("div",{id:m}))},y=function(){var e=(0,o.Z)((0,t.Z)().mark((function e(n,r){var o;return(0,t.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,f(n);case 2:o=e.sent,setTimeout((function(){return o.applyFsDiff({create:{"tsconfig.json":JSON.stringify({compilerOptions:{module:"esnext",target:"esnext",strict:!0}},null,4)},destroy:[]})}),5e3),r(!1);case 5:case"end":return e.stop()}}),e)})));return function(n,r){return e.apply(this,arguments)}}()},5112:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>u});var t=r(4250),o=r(7075),a=(r(9496),r(9613)),i=r(2555),s=["components"],c={hide_table_of_contents:!0},l="Scopes",p={unversionedId:"scopes",id:"scopes",title:"Scopes",description:"",source:"@site/docs/scopes.mdx",sourceDirName:".",slug:"/scopes",permalink:"/docs/next/scopes",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"sidebar",previous:{title:"Intro",permalink:"/docs/next/"}},d={},u=[],m={toc:u};function f(e){var n=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"scopes"},"Scopes"),(0,a.kt)(i.g,{embedId:"scope",mdxType:"StackBlitzDemo"}))}f.isMDXComponent=!0}}]);